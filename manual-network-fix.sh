#!/bin/bash

echo "=== Manual MySQL Network Fix ==="
echo "Run these commands one by one on your Ubuntu server:"
echo ""

echo "1. First, let's see what containers are running:"
echo "docker ps -a"
echo ""

echo "2. Stop the current deployment:"
echo "docker-compose -f docker-compose.prod.external-mysql-linux.yml down"
echo ""

echo "3. Get your host machine IP:"
echo "hostname -I"
echo ""

echo "4. Get Docker bridge IP:"
echo "docker network inspect bridge | grep Gateway"
echo ""

echo "5. Check if MySQL is running and get its container IP:"
echo "docker ps | grep mysql"
echo "docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' mysql_lawviksh"
echo ""

echo "6. Test MySQL connection from host:"
echo "mysql -h localhost -u lawviksh_user -pyour_password -e 'SELECT 1;'"
echo ""

echo "7. Create environment file with the correct IP (try these in order):"
echo ""
echo "Option A - Use host IP (if MySQL is running on host):"
echo "HOST_IP=\$(hostname -I | awk '{print \$1}')"
echo "cat > .env.prod << EOF"
echo "# Production Environment Variables"
echo "environment=production"
echo "debug=false"
echo ""
echo "# Database Configuration"
echo "db_host=\$HOST_IP"
echo "db_port=3306"
echo "db_name=lawviksh_db"
echo "db_user=lawviksh_user"
echo "db_password=your_password"
echo ""
echo "# Security Configuration"
echo "secret_key=your-secret-key-here-change-in-production"
echo "algorithm=HS256"
echo "access_token_expire_minutes=30"
echo ""
echo "# Admin Credentials"
echo "admin_username=admin"
echo "admin_password=admin123"
echo ""
echo "# Server Configuration"
echo "host=0.0.0.0"
echo "port=8000"
echo ""
echo "# API Configuration"
echo "api_base_url=https://www.lawvriksh.com/api"
echo "api_prefix=/api"
echo ""
echo "# CORS Configuration"
echo "cors_origins=[\"https://www.lawvriksh.com\",\"https://lawvriksh.com\",\"https://app.lawvriksh.com\",\"https://admin.lawvriksh.com\"]"
echo "cors_allow_credentials=true"
echo "cors_allow_methods=[\"GET\",\"POST\",\"PUT\",\"DELETE\",\"OPTIONS\",\"PATCH\"]"
echo "cors_allow_headers=[\"*\"]"
echo "cors_expose_headers=[\"Content-Length\",\"Content-Type\",\"Authorization\"]"
echo "cors_max_age=86400"
echo "EOF"
echo ""

echo "Option B - Use Docker bridge IP:"
echo "cat > .env.prod << EOF"
echo "# Production Environment Variables"
echo "environment=production"
echo "debug=false"
echo ""
echo "# Database Configuration"
echo "db_host=172.17.0.1"
echo "db_port=3306"
echo "db_name=lawviksh_db"
echo "db_user=lawviksh_user"
echo "db_password=your_password"
echo ""
echo "# Security Configuration"
echo "secret_key=your-secret-key-here-change-in-production"
echo "algorithm=HS256"
echo "access_token_expire_minutes=30"
echo ""
echo "# Admin Credentials"
echo "admin_username=admin"
echo "admin_password=admin123"
echo ""
echo "# Server Configuration"
echo "host=0.0.0.0"
echo "port=8000"
echo ""
echo "# API Configuration"
echo "api_base_url=https://www.lawvriksh.com/api"
echo "api_prefix=/api"
echo ""
echo "# CORS Configuration"
echo "cors_origins=[\"https://www.lawvriksh.com\",\"https://lawvriksh.com\",\"https://app.lawvriksh.com\",\"https://admin.lawvriksh.com\"]"
echo "cors_allow_credentials=true"
echo "cors_allow_methods=[\"GET\",\"POST\",\"PUT\",\"DELETE\",\"OPTIONS\",\"PATCH\"]"
echo "cors_allow_headers=[\"*\"]"
echo "cors_expose_headers=[\"Content-Length\",\"Content-Type\",\"Authorization\"]"
echo "cors_max_age=86400"
echo "EOF"
echo ""

echo "8. Start the application:"
echo "docker-compose -f docker-compose.prod.external-mysql-linux.yml up -d"
echo ""

echo "9. Check the logs:"
echo "docker-compose -f docker-compose.prod.external-mysql-linux.yml logs -f"
echo ""

echo "=== Alternative: Use host network mode ==="
echo "If the above doesn't work, try using host network mode:"
echo ""

echo "1. Update docker-compose to use host network:"
echo "sed -i 's/networks:/# networks:/' docker-compose.prod.external-mysql-linux.yml"
echo "sed -i 's/- lawviksh_network_external_linux/# - lawviksh_network_external_linux/' docker-compose.prod.external-mysql-linux.yml"
echo "sed -i 's/network_mode: bridge/network_mode: host/' docker-compose.prod.external-mysql-linux.yml"
echo ""

echo "2. Set db_host to localhost:"
echo "sed -i 's/db_host=.*/db_host=localhost/' .env.prod"
echo ""

echo "3. Restart:"
echo "docker-compose -f docker-compose.prod.external-mysql-linux.yml restart"
echo ""

echo "=== Troubleshooting Commands ==="
echo ""

echo "Test MySQL from inside the app container:"
echo "docker exec -it \$(docker-compose -f docker-compose.prod.external-mysql-linux.yml ps -q app) bash"
echo "Then run: mysql -h <IP> -u lawviksh_user -pyour_password -e 'SELECT 1;'"
echo ""

echo "Check network connectivity:"
echo "docker exec -it \$(docker-compose -f docker-compose.prod.external-mysql-linux.yml ps -q app) ping <IP>"
echo ""

echo "Check if MySQL is listening on the correct port:"
echo "netstat -tlnp | grep 3306"
echo ""

echo "Check MySQL logs:"
echo "docker logs mysql_lawviksh" 